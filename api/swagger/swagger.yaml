swagger: 2.0
info:
  version: "0.2.1"
  title: Serenity Challenge API
  description: "API to host challenge, requirements, scorecard and results"
# during dev, should point to your local machine
host: localhost
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
x-volos-resources: {}
paths:
  /challenges:
    get:
      x-swagger-router-controller: challenges
      description: get all the challenges
      # used as the method name of the controller
      operationId: getAll
      parameters:
        - name: filter
          in: query
          type: string
          description: "{fieldName1}={fieldValue1}&...{fieldNameN}>{fieldValueN}. String value needs to be surrounded by single quotation(â€˜). filedValue can contain multiple values using in() format {fieldName}=in({fieldValue1},{fieldValue1}). Operations can be =, > or <.  < and > operations are only for number, inteters and dates"
        - name: limit
          in: query
          type: integer
          format: int32
          description: maximum number of records to return
        - name: offset
          in: query
          type: integer
          format: int32
          description: id to start return values
        - name: orderBy
          in: query
          type: string
          description: field name to sort {asc [nulls {first | last} ] | desc  [nulls {first | last} }
      responses:
        200:
          description: Returns a list of all challenge resources
          schema:
            $ref: ChallengesResponse
        default:
          description: Error
          schema:
            $ref: ErrorResponse
    post:
      x-swagger-router-contorller: challenges
      description: Create a new challenge
      operationId: create
      parameters:
        - name: body
          in: body
          required: true
          schema: 
            $ref: ChallengeResource
      responses:
        200:
          description: Success
          schema:
            $ref: ActionResponse
        default:
          description: Error
          schema:
            $ref: ErrorResponse
  /challenges/results:
    get:
      x-swagger-router-controller: results
      description: Get all results for a list of challenges
      operationId: getResultsByChallenge
      parameters:
        - name: challengeIds
          in: query
          required: false
          type: array
          format: csv
          items:
            type: string
          description: an array of id's sperated by commas
      responses:
        200:
          description: Sucessfull response
          schema:
            $ref: ResultsResponse
        default:
          description: Error
          schema:
            $ref: ErrorResponse
  /challenges/{challengeId}:
    get:
      x-swagger-router-controller: challenges
      operationId: getByChallengeId
      description: Get a challenge
      parameters:
        - name: challengeId
          in: path
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: A full challenge resource
          schema:
            $ref: ChallengeResource
        default:
          description: Error
          schema:
            $ref: ErrorResponse
    put:
      x-swagger-router-controller: challenges
      description: Update a challenge
      operationId: update
      parameters:
        - name: challengeId
          in: path
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          required: true
          schema:
            $ref: ChallengeResource
      responses:
        200:
          description: Update successful
          schema:
            properties:
              success:
                type: boolean
                description: True or False if the request was a success
              status:
                type: integer
                description:  The HTTP status code
              content:
                $ref: ChallengeResource
        default:
          description: Error
          schema:
            $ref: ErrorResponse
    delete:
      x-swagger-router-controller: challenges
      description: Delete a challenge
      operationId: delete
      parameters:
        - name: challengeId
          in: path
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Challenge was deleted
          schema:
            $ref: ActionResponse
        default:
          description: Error
          schema:
            $ref: ErrorResponse
        
# Custom Responses
definitions:
  ChallengeResource:
    properties:
      id:
        type: integer
        description: postgres primary key
      regStartDate:
        type: string
        format: date-time
        description: the start Date of the challenge
      subEndDate:
        type: string
        format: date-time
        description: last time a member can submit.
      completeDate:
        type: string
        format: date-time
        description: The closing date of the challenge.
      title:
        type: string
        description: Title of the challenge.
        default: Untitled Challenge
        required: true
        minLength: 1
      overview:
        type: string
        description: 140 Char overview
        maxLength: 140
      description:
        type: string
        description: the body of the challenge
      tags:
        type: array
        items:
          type: string
      status:
        type: string
        description: The current status of the challenge
        enum:
          - DRAFT
          - ACTIVE
          - REVIEW
          - COMPLETE
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      createdBy:
        type: string
        description: The handle of the user who created the row
      updatedBy:
        type: string
        description: The handle of the user last updated the row
  ResultResource:
    required:
      - ScorecardId
    properties:
      id:
        type: integer
        format: int64
      pay:
        type: boolean
        description: "determines if scorecard merits awarding place and cash prize"
      place:
        type: integer
        format: int32
        minimum: 1
        maxium: 6
        description: "TODO: results instead? awarded place, 1 for 1st, 2 for second ..."
      prize: 
        type: number
        format: double
        description: "cash payout"    

      
# Responses
  ChallengesResponse:
    required:
      - success
      - status
      - content
    properties:
      success:
        type: boolean
        description: Was the request a success
      status:
        type: integer
        format: int32
        description: The http status code
      metadata:
        $ref: MetadataListResponse
      content:
        type: array
        items:
          $ref: ChallengeResource
          minItems: 0
          uniqueItems: true
  ChallengeResponse:
    required:
      - success
      - status
      - content
    properties:
      success:
        type: boolean
        description: Was the request a success
      status:
        type: integer
        format: int32
        description: The http status code
      metadata:
        $ref: MetadataListResponse
      content:
        $ref: ChallengeResource
  ResultsResponse:
    properties:
      success:
        type: boolean
        description: Was the request a success
      status:
        type: integer
        format: int32
        description: The http status code
      metadata:
        $ref: MetadataListResponse
      content:
        type: array
        items:
          $ref: ResultResource
          minItems: 0
          uniqueItems: true
  ActionResponse:
    required:
      - id
    properties:
      id:
        type: integer
        format: int64
      result:
        properties:
          success:
            type: boolean
            description: Was the request a success
          status:
            type: integer
            format: int32
            description: The http status code
  ChallengeBody:
    properties:
      id:
        type: integer
  MetadataListResponse:
    properties:
      totalCount:
        type: inteter
        format: int32
  ErrorResponse:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
        description: The http status code
      message:
        type: string